var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/CreateUserDto.html",[0,0.333,1,0.914]],["body/classes/CreateUserDto.html",[0,0.269,1,0.737,2,0.698,3,0.457,4,0.368,5,0.368,6,0.876,7,0.292,8,1.412,9,2.875,10,1.773,11,2.504,12,2.689,13,2.822,14,1.209,15,0.08,16,1.85,17,1.618,18,2.662,19,1.849,20,2.605,21,2.605,22,2.919,23,3.412,24,3.412,25,1.676,26,3.412,27,1.148,28,4.046,29,4.106,30,4.106,31,1.308,32,4.106,33,2.662,34,3.412,35,3.412,36,1.849,37,3.972,38,1.308,39,1.148,40,1.849,41,1.148,42,1.148,43,2.605,44,3.119,45,1.148,46,3.412,47,2.662,48,3.119,49,1.148,50,1.849,51,1.148,52,1.849,53,1.148,54,1.148,55,1.849,56,1.148,57,0.737,58,2.919,59,0.698,60,2.322,61,2.322,62,1.148,63,1.148,64,0.876,65,0.457,66,1.618,67,1.148,68,1.849,69,3.119,70,1.148,71,1.148,72,1.849,73,1.148,74,1.148,75,1.148,76,0.021,77,0.034,78,0.021]],["title/classes/User.html",[0,0.333,79,0.736]],["body/classes/User.html",[0,0.334,2,1.395,3,0.915,4,0.737,5,0.737,7,0.585,8,2.364,10,2.674,11,2.674,12,2.674,13,2.674,14,1.345,15,0.082,16,1.842,17,2.278,25,1.521,31,1.128,38,1.842,43,2.862,57,0.915,65,0.915,76,0.042,77,0.056,78,0.042,79,0.994,80,1.753,81,3.503,82,3.749,83,2.296,84,2.296,85,3.749,86,2.296,87,2.296,88,3.096,89,3.096,90,2.364,91,2.296,92,3.749,93,3.096,94,3.096,95,1.395,96,1.753]],["title/controllers/UserController.html",[97,1.127,98,1.127]],["body/controllers/UserController.html",[0,0.159,1,1.282,3,0.437,4,0.352,5,0.352,7,0.279,9,0.837,14,0.832,15,0.083,16,1.106,17,1.575,20,1.979,21,2.176,25,1.273,31,1.273,38,1.273,57,1.136,59,0.666,65,0.437,66,2.389,76,0.02,77,0.032,78,0.02,79,1.033,90,1.979,96,1.36,97,0.539,98,0.875,99,0.837,100,0.837,101,1.097,102,1.36,103,2.839,104,1.36,105,1.36,106,1.36,107,1.36,108,1.097,109,4.172,110,2.592,111,1.782,112,3.054,113,1.097,114,1.782,115,1.097,116,3.354,117,3.354,118,1.097,119,1.097,120,1.979,121,1.979,122,2.851,123,1.979,124,0.837,125,1.782,126,2.592,127,1.782,128,3.054,129,2.251,130,1.097,131,1.097,132,1.979,133,1.097,134,1.782,135,1.782,136,1.782,137,1.782,138,1.097,139,1.097,140,1.097,141,1.097,142,1.782,143,1.097,144,1.097,145,1.782,146,1.782,147,1.782,148,1.097,149,2.592,150,0.539,151,0.722,152,0.837,153,0.837,154,0.837,155,2.851,156,3.467,157,1.097,158,1.097,159,1.097,160,1.097,161,2.592,162,1.097,163,3.354,164,3.646,165,2.592,166,1.097,167,2.592,168,2.592,169,1.979,170,1.097,171,2.56,172,2.251,173,2.592,174,2.56,175,2.592,176,1.097,177,1.097,178,1.097,179,1.097,180,1.097,181,1.097,182,1.097,183,1.097]],["title/modules/UserModule.html",[184,1.394,185,1.127]],["body/modules/UserModule.html",[0,0.365,3,1.002,4,0.807,5,0.807,15,0.082,57,1.648,65,1.002,76,0.046,77,0.06,78,0.046,79,0.807,98,1.8,99,2.511,150,1.235,151,1.328,152,1.92,184,2.227,185,2.033,186,1.528,187,1.235,188,1.92,189,1.92,190,1.235,191,2.798,192,1.92,193,1.92,194,1.92,195,2.511,196,1.92,197,1.92,198,2.515,199,2.515,200,1.528,201,1.528,202,2.515,203,1.92,204,2.515,205,2.515,206,2.515,207,2.515]],["title/injectables/UserService.html",[151,0.736,208,1.127]],["body/injectables/UserService.html",[0,0.258,1,1.643,3,0.708,4,0.571,5,0.571,7,0.453,14,1.075,15,0.083,16,1.499,31,1.646,38,1.749,57,1.418,65,0.708,76,0.032,77,0.047,78,0.032,79,1.231,95,1.08,102,1.975,103,3.183,104,1.975,105,1.975,106,2.558,107,1.975,120,2.558,121,2.558,123,2.558,124,1.975,132,1.357,150,0.873,151,0.83,154,1.357,169,2.718,171,2.558,174,1.357,200,1.08,203,1.357,208,1.271,209,1.778,210,1.357,211,2.587,212,1.778,213,2.558,214,1.778,215,2.587,216,2.587,217,1.778,218,3.929,219,1.778,220,1.778,221,2.587,222,1.778,223,1.778,224,1.778,225,1.778,226,1.778,227,1.778,228,1.778,229,2.329,230,2.587,231,1.778,232,1.778]],["title/coverage.html",[233,1.88]],["body/coverage.html",[0,0.518,1,1.136,5,0.915,6,2.176,14,0.915,15,0.08,76,0.052,77,0.065,78,0.052,79,0.915,80,2.176,97,1.401,98,1.401,100,2.176,151,0.915,190,1.401,201,1.732,208,1.401,210,2.176,229,2.176,233,1.732,234,2.851,235,2.851,236,2.851,237,2.176,238,2.851,239,4.276,240,3.563,241,2.176,242,2.851,243,3.887,244,2.851,245,2.851,246,2.851]],["title/dependencies.html",[187,1.35,247,1.933]],["body/dependencies.html",[0,0.512,15,0.083,59,1.703,64,2.14,76,0.051,77,0.064,78,0.051,95,1.703,150,1.377,153,2.691,187,1.377,200,1.703,248,3.857,249,2.803,250,2.803,251,2.803,252,2.803,253,2.803,254,2.803,255,2.803,256,2.803,257,2.803,258,2.803,259,2.803,260,2.803,261,2.803,262,2.803,263,2.803,264,2.803,265,2.803,266,2.803,267,2.803,268,2.803,269,2.803,270,2.803]],["title/miscellaneous/functions.html",[271,0.95,272,2.098]],["body/miscellaneous/functions.html",[7,0.864,15,0.072,76,0.062,77,0.072,78,0.062,190,2.059,241,2.59,271,1.666,272,2.59,273,3.392]],["title/index.html",[7,0.492,274,1.933,275,1.933]],["body/index.html",[4,0.753,15,0.081,66,1.425,76,0.043,77,0.057,78,0.043,213,1.79,233,1.425,276,2.345,277,2.345,278,3.14,279,2.345,280,2.345,281,2.345,282,2.345,283,2.345,284,2.345,285,2.345,286,2.345,287,2.345,288,3.54,289,2.345,290,2.345,291,2.345,292,4.144,293,2.345,294,2.345,295,2.345,296,4.057,297,2.345,298,2.345,299,3.14,300,2.345,301,2.345,302,2.345,303,2.345,304,3.14,305,3.14,306,2.345,307,2.345,308,2.345,309,3.14,310,3.14,311,2.345,312,2.345,313,2.345,314,2.345,315,2.345,316,1.79,317,2.345,318,2.345,319,2.345,320,2.345,321,2.345,322,2.345,323,2.345,324,2.345,325,2.345,326,2.345,327,2.345,328,2.345,329,2.345,330,2.345,331,2.345,332,2.345,333,2.345,334,2.345]],["title/modules.html",[186,1.88]],["body/modules.html",[15,0.072,76,0.062,77,0.072,78,0.062,185,1.684,186,2.082,316,2.616,335,3.427,336,3.427,337,3.427]],["title/overview.html",[338,2.362]],["body/overview.html",[2,1.852,15,0.073,76,0.055,77,0.067,78,0.055,97,1.497,151,1.286,184,2.256,185,2.048,187,1.497,188,2.327,189,2.327,190,1.497,191,2.327,192,2.327,193,2.327,194,2.327,195,2.835,196,2.327,197,2.327,208,1.497,338,2.327,339,4.005,340,3.048]],["title/miscellaneous/variables.html",[271,0.95,341,2.098]],["body/miscellaneous/variables.html",[7,0.773,14,1.189,15,0.079,25,1.49,76,0.055,77,0.067,78,0.055,201,2.25,237,2.316,271,1.49,341,2.316,342,3.034,343,3.034,344,3.034,345,3.034,346,3.034,347,3.034,348,3.034,349,3.034,350,3.034,351,3.034,352,3.034,353,3.034,354,3.034,355,3.034,356,3.034,357,3.034,358,3.034,359,3.034]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["0.2.28",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":339,"title":{},"body":{"overview.html":{}}}],["12345678",{"_index":67,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["12345678})@max(99999999",{"_index":53,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["2",{"_index":340,"title":{},"body":{"overview.html":{}}}],["200",{"_index":128,"title":{},"body":{"controllers/UserController.html":{}}}],["201",{"_index":114,"title":{},"body":{"controllers/UserController.html":{}}}],["3",{"_index":23,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3.0.2",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["4.6.1",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":116,"title":{},"body":{"controllers/UserController.html":{}}}],["6.5.4",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":55,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["7.0.0",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["7.1.4",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":48,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8.2.0",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["8.4.1",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["87654321",{"_index":74,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["87654321})@max(99999999",{"_index":45,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["actualiza",{"_index":142,"title":{},"body":{"controllers/UserController.html":{}}}],["al",{"_index":34,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":317,"title":{},"body":{"index.html":{}}}],["angular",{"_index":287,"title":{},"body":{"index.html":{}}}],["apellido",{"_index":40,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apioperation",{"_index":155,"title":{},"body":{"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":110,"title":{},"body":{"controllers/UserController.html":{}}}],["apiproperty",{"_index":58,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({description",{"_index":18,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiresponse",{"_index":156,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags",{"_index":157,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('usuario",{"_index":158,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":294,"title":{},"body":{"index.html":{}}}],["applications",{"_index":284,"title":{},"body":{"index.html":{}}}],["async",{"_index":103,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["author",{"_index":327,"title":{},"body":{"index.html":{}}}],["await",{"_index":169,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":318,"title":{},"body":{"index.html":{}}}],["bad",{"_index":117,"title":{},"body":{"controllers/UserController.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":337,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":335,"title":{},"body":{"modules.html":{}}}],["building",{"_index":279,"title":{},"body":{"index.html":{}}}],["campo",{"_index":30,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caracteres",{"_index":69,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caracteres.'})@isnumber",{"_index":50,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caracteres.'})@isstring({message",{"_index":36,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caracteres.'})@min(1000000",{"_index":54,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caracteres.'})@min(10000000",{"_index":49,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["catch",{"_index":173,"title":{},"body":{"controllers/UserController.html":{}}}],["class",{"_index":0,"title":{"classes/CreateUserDto.html":{},"classes/User.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":193,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":194,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":92,"title":{},"body":{"classes/User.html":{}}}],["column({type",{"_index":81,"title":{},"body":{"classes/User.html":{}}}],["const",{"_index":168,"title":{},"body":{"controllers/UserController.html":{}}}],["constructor",{"_index":211,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":160,"title":{},"body":{"controllers/UserController.html":{}}}],["constructor(userrepository",{"_index":212,"title":{},"body":{"injectables/UserService.html":{}}}],["contener",{"_index":33,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["controller",{"_index":97,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('user",{"_index":159,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":99,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["coverage",{"_index":233,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":111,"title":{},"body":{"controllers/UserController.html":{}}}],["creados",{"_index":162,"title":{},"body":{"controllers/UserController.html":{}}}],["creados.'})@apiresponse({status",{"_index":138,"title":{},"body":{"controllers/UserController.html":{}}}],["created",{"_index":176,"title":{},"body":{"controllers/UserController.html":{}}}],["created.'})@apiresponse({status",{"_index":115,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser",{"_index":104,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":177,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(body",{"_index":108,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":216,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":1,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["database",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["de",{"_index":46,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["debe",{"_index":32,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":38,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["del",{"_index":20,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":145,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":105,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@query('id",{"_index":182,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":124,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":66,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"index.html":{}}}],["development",{"_index":295,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["dto/user.dto",{"_index":154,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":306,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":280,"title":{},"body":{"index.html":{}}}],["el",{"_index":29,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["eliminar",{"_index":125,"title":{},"body":{"controllers/UserController.html":{}}}],["entities",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities/user.entity",{"_index":203,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":93,"title":{},"body":{"classes/User.html":{}}}],["error",{"_index":174,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["example",{"_index":26,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["export",{"_index":65,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":192,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":153,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["false",{"_index":90,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["firstname",{"_index":10,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["framework",{"_index":278,"title":{},"body":{"index.html":{}}}],["function",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":272,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getalluser",{"_index":106,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getalluser(@res",{"_index":166,"title":{},"body":{"controllers/UserController.html":{}}}],["getalluser(response",{"_index":133,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":274,"title":{"index.html":{}},"body":{}}],["grow",{"_index":313,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":285,"title":{},"body":{"index.html":{}}}],["here",{"_index":324,"title":{},"body":{"index.html":{}}}],["host",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":331,"title":{},"body":{"index.html":{}}}],["id",{"_index":132,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id.'})@apiresponse({status",{"_index":127,"title":{},"body":{"controllers/UserController.html":{}}}],["identificador",{"_index":52,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["identifier",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":57,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":205,"title":{},"body":{"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":208,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository",{"_index":223,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":224,"title":{},"body":{"injectables/UserService.html":{}}}],["inspired",{"_index":286,"title":{},"body":{"index.html":{}}}],["installation",{"_index":291,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":293,"title":{},"body":{"index.html":{}}}],["int",{"_index":85,"title":{},"body":{"classes/User.html":{}}}],["isnumber",{"_index":60,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":61,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":320,"title":{},"body":{"index.html":{}}}],["juan",{"_index":71,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["juan'})@minlength(3",{"_index":27,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["kamil",{"_index":328,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":11,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["legend",{"_index":188,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":334,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":310,"title":{},"body":{"index.html":{}}}],["los",{"_index":136,"title":{},"body":{"controllers/UserController.html":{}}}],["matching",{"_index":77,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":62,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["max(99999999",{"_index":68,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["menos",{"_index":35,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":28,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":102,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min",{"_index":63,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["min(1000000",{"_index":70,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["min(10000000",{"_index":75,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":22,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":72,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":271,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":309,"title":{},"body":{"index.html":{}}}],["mode",{"_index":299,"title":{},"body":{"index.html":{}}}],["module",{"_index":184,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{}}}],["more",{"_index":323,"title":{},"body":{"index.html":{}}}],["muestra",{"_index":134,"title":{},"body":{"controllers/UserController.html":{}}}],["myśliwiec",{"_index":329,"title":{},"body":{"index.html":{}}}],["máximo",{"_index":47,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":288,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":333,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":150,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":59,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":200,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":229,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["node.js",{"_index":277,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":19,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["npm",{"_index":292,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":89,"title":{},"body":{"classes/User.html":{}}}],["number",{"_index":43,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["number(process.env.db_port",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["número",{"_index":44,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ok",{"_index":164,"title":{},"body":{"controllers/UserController.html":{}}}],["ok.'})@apiresponse({status",{"_index":129,"title":{},"body":{"controllers/UserController.html":{}}}],["open",{"_index":311,"title":{},"body":{"index.html":{}}}],["optional",{"_index":121,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":197,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":338,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":247,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":120,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["perez",{"_index":73,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["perez'})@minlength(3",{"_index":41,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["pg",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":12,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["please",{"_index":321,"title":{},"body":{"index.html":{}}}],["port",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":146,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"controllers/UserController.html":{}}}],["primarycolumn",{"_index":94,"title":{},"body":{"classes/User.html":{}}}],["primarycolumn({type",{"_index":87,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":225,"title":{},"body":{"injectables/UserService.html":{}}}],["process.env.db_host",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_name",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":301,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":276,"title":{},"body":{"index.html":{}}}],["project",{"_index":312,"title":{},"body":{"index.html":{}}}],["promise",{"_index":218,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["providers",{"_index":191,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":147,"title":{},"body":{"controllers/UserController.html":{}}}],["query",{"_index":148,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":322,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":9,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["reflect",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":213,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["request",{"_index":165,"title":{},"body":{"controllers/UserController.html":{}}}],["request.'})@delete",{"_index":130,"title":{},"body":{"controllers/UserController.html":{}}}],["request.'})@get",{"_index":139,"title":{},"body":{"controllers/UserController.html":{}}}],["request.'})@post",{"_index":118,"title":{},"body":{"controllers/UserController.html":{}}}],["request.'})@put",{"_index":143,"title":{},"body":{"controllers/UserController.html":{}}}],["required",{"_index":24,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["res",{"_index":149,"title":{},"body":{"controllers/UserController.html":{}}}],["reset",{"_index":196,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":109,"title":{},"body":{"controllers/UserController.html":{}}}],["response.status(200).json",{"_index":172,"title":{},"body":{"controllers/UserController.html":{}}}],["response.status(201).json",{"_index":179,"title":{},"body":{"controllers/UserController.html":{}}}],["response.status(400).json",{"_index":175,"title":{},"body":{"controllers/UserController.html":{}}}],["result",{"_index":76,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":78,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":171,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":123,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":296,"title":{},"body":{"index.html":{}}}],["rut",{"_index":13,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["rxjs",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":281,"title":{},"body":{"index.html":{}}}],["ser",{"_index":37,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["server",{"_index":282,"title":{},"body":{"index.html":{}}}],["side",{"_index":283,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":315,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":273,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../orm.config.ts",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/configs/orm.config",{"_index":202,"title":{},"body":{"modules/UserModule.html":{}}}],["src/configs/orm.config.ts",{"_index":237,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/user.dto.ts",{"_index":6,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:16",{"_index":56,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:29",{"_index":39,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:42",{"_index":42,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:57",{"_index":51,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/entities/user.entity.ts",{"_index":80,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":84,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:15",{"_index":86,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":91,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":83,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":100,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:25",{"_index":140,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":119,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:51",{"_index":144,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:64",{"_index":131,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":198,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":210,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:13",{"_index":220,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":217,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:28",{"_index":222,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:35",{"_index":219,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":214,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":297,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":300,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":302,"title":{},"body":{"index.html":{}}}],["started",{"_index":275,"title":{"index.html":{}},"body":{}}],["starter",{"_index":290,"title":{},"body":{"index.html":{}}}],["statements",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":163,"title":{},"body":{"controllers/UserController.html":{}}}],["stay",{"_index":325,"title":{},"body":{"index.html":{}}}],["string",{"_index":16,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":161,"title":{},"body":{"controllers/UserController.html":{}}}],["support",{"_index":316,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":336,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":305,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":308,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":307,"title":{},"body":{"index.html":{}}}],["tests",{"_index":304,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":314,"title":{},"body":{"index.html":{}}}],["this.userrepository.delete(id",{"_index":232,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.find",{"_index":226,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(createuserdto.rut",{"_index":227,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":230,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(body",{"_index":178,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(id",{"_index":183,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getalluser",{"_index":170,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(body",{"_index":181,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":231,"title":{},"body":{"injectables/UserService.html":{}}}],["todos",{"_index":135,"title":{},"body":{"controllers/UserController.html":{}}}],["touch",{"_index":326,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["través",{"_index":126,"title":{},"body":{"controllers/UserController.html":{}}}],["true",{"_index":25,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":167,"title":{},"body":{"controllers/UserController.html":{}}}],["twitter",{"_index":332,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":95,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormconfigurations",{"_index":201,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":199,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":207,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot(typeormconfigurations",{"_index":206,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmoduleoptions",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":289,"title":{},"body":{"index.html":{}}}],["ui",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":112,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined",{"_index":228,"title":{},"body":{"injectables/UserService.html":{}}}],["unique",{"_index":88,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":303,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":107,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(@body",{"_index":180,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(body",{"_index":141,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(createuserdto",{"_index":221,"title":{},"body":{"injectables/UserService.html":{}}}],["user",{"_index":79,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":204,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":152,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":98,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":185,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":215,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":96,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{}}}],["userservice",{"_index":151,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":21,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["usuario.'})@apiresponse({status",{"_index":113,"title":{},"body":{"controllers/UserController.html":{}}}],["usuarios",{"_index":137,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":64,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":82,"title":{},"body":{"classes/User.html":{}}}],["variable",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":341,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":298,"title":{},"body":{"index.html":{}}}],["website",{"_index":330,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":319,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":195,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstname\n                            \n                            \n                                    Readonly\n                                lastname\n                            \n                            \n                                    Readonly\n                                phonenumber\n                            \n                            \n                                    Readonly\n                                rut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Nombre del usuario.', minLength: 3, type: String, required: true, example: 'Juan'})@MinLength(3, {message: 'El campo \"name\" debe contener al menos 3 caracteres.'})@IsString({message: 'El campo \"name\" debe ser string.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Apellido del usuario.', minLength: 3, type: String, required: true, example: 'Perez'})@MinLength(3, {message: 'El campo \"lastname\" debe contener al menos 3 caracteres.'})@IsString({message: 'El campo \"lastname\" debe ser string.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phonenumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Número del usuario.', type: Number, required: true, example: 87654321})@Max(99999999, {message: 'El campo \"phonenumber\" debe ser de máximo 8 caracteres.'})@Min(10000000, {message: 'El campo \"phonenumber\" debe ser de al menos 8 caracteres.'})@IsNumber({}, {message: 'El campo \"phonenumber\" debe ser número.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            rut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Rut identificador del usuario.', type: Number, required: true, example: 12345678})@Max(99999999, {message: 'El campo \"rut\" debe ser de máximo 8 caracteres.'})@Min(1000000, {message: 'El campo \"rut\" debe ser de al menos 7 caracteres.'})@IsNumber({}, {message: 'El campo \"rut\" debe ser número.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, Max, Min, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'Rut identificador del usuario.',\n    type: Number,\n    required: true,\n    example: 12345678,\n  })\n  @Max(99999999, { message: 'El campo \"rut\" debe ser de máximo 8 caracteres.' })\n  @Min(1000000, {\n    message: 'El campo \"rut\" debe ser de al menos 7 caracteres.',\n  })\n  @IsNumber({}, { message: 'El campo \"rut\" debe ser número.' })\n  readonly rut: number;\n\n  @ApiProperty({\n    description: 'Nombre del usuario.',\n    minLength: 3,\n    type: String,\n    required: true,\n    example: 'Juan',\n  })\n  @MinLength(3, {\n    message: 'El campo \"name\" debe contener al menos 3 caracteres.',\n  })\n  @IsString({ message: 'El campo \"name\" debe ser string.' })\n  readonly firstname: string;\n\n  @ApiProperty({\n    description: 'Apellido del usuario.',\n    minLength: 3,\n    type: String,\n    required: true,\n    example: 'Perez',\n  })\n  @MinLength(3, {\n    message: 'El campo \"lastname\" debe contener al menos 3 caracteres.',\n  })\n  @IsString({ message: 'El campo \"lastname\" debe ser string.' })\n  readonly lastname: string;\n\n  @ApiProperty({\n    description: 'Número del usuario.',\n    type: Number,\n    required: true,\n    example: 87654321,\n  })\n  @Max(99999999, {\n    message: 'El campo \"phonenumber\" debe ser de máximo 8 caracteres.',\n  })\n  @Min(10000000, {\n    message: 'El campo \"phonenumber\" debe ser de al menos 8 caracteres.',\n  })\n  @IsNumber({}, { message: 'El campo \"phonenumber\" debe ser número.' })\n  readonly phonenumber: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                phonenumber\n                            \n                            \n                                rut\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phonenumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({type: 'int', unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryColumn } from 'typeorm';\n\n@Entity({ name: 'users' })\nexport class User {\n  @PrimaryColumn({ type: 'int', unique: true, nullable: false })\n  rut: number;\n\n  @Column({ type: 'varchar' })\n  firstname: string;\n\n  @Column({ type: 'varchar' })\n  lastname: string;\n\n  @Column({ type: 'int' })\n  phonenumber: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(body: CreateUserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Crea un usuario.'})@ApiResponse({status: 201, description: 'CREATED.'})@ApiResponse({status: 400, description: 'BAD REQUEST.'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Eliminar un usuario a través del ID.'})@ApiResponse({status: 200, description: 'OK.'})@ApiResponse({status: 400, description: 'BAD REQUEST.'})@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUser(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Muestra todos los usuarios creados.'})@ApiResponse({status: 200, description: 'OK.'})@ApiResponse({status: 400, description: 'BAD REQUEST.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(body: CreateUserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Actualiza un usuario a través del ID.'})@ApiResponse({status: 200, description: 'OK.'})@ApiResponse({status: 400, description: 'BAD REQUEST.'})@Put()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  Query,\n  Res,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { Response } from 'express';\nimport { CreateUserDto } from './dto/user.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Usuario')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @ApiOperation({ summary: 'Muestra todos los usuarios creados.' })\n  @ApiResponse({ status: 200, description: 'OK.' })\n  @ApiResponse({ status: 400, description: 'BAD REQUEST.' })\n  @Get()\n  async getAllUser(@Res() response: Response) {\n    try {\n      const users = await this.userService.getAllUser();\n      return response.status(200).json({ ok: true, users });\n    } catch (error) {\n      return response.status(400).json({ ok: false, error });\n    }\n  }\n\n  @ApiOperation({ summary: 'Crea un usuario.' })\n  @ApiResponse({ status: 201, description: 'CREATED.' })\n  @ApiResponse({ status: 400, description: 'BAD REQUEST.' })\n  @Post()\n  async createUser(@Body() body: CreateUserDto, @Res() response: Response) {\n    try {\n      const user = await this.userService.createUser(body);\n      return response.status(201).json({ ok: true, user });\n    } catch (error) {\n      return response.status(400).json({ ok: false, error });\n    }\n  }\n\n  @ApiOperation({ summary: 'Actualiza un usuario a través del ID.' })\n  @ApiResponse({ status: 200, description: 'OK.' })\n  @ApiResponse({ status: 400, description: 'BAD REQUEST.' })\n  @Put()\n  async updateUser(@Body() body: CreateUserDto, @Res() response: Response) {\n    try {\n      const user = await this.userService.updateUser(body);\n      return response.status(200).json({ ok: true, user });\n    } catch (error) {\n      return response.status(400).json({ ok: false, error });\n    }\n  }\n\n  @ApiOperation({ summary: 'Eliminar un usuario a través del ID.' })\n  @ApiResponse({ status: 200, description: 'OK.' })\n  @ApiResponse({ status: 400, description: 'BAD REQUEST.' })\n  @Delete()\n  async deleteUser(@Query('id') id: string, @Res() response: Response) {\n    try {\n      const user = await this.userService.deleteUser(id);\n      return response.status(200).json({ ok: true, user });\n    } catch (error) {\n      return response.status(400).json({ ok: false, error });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeOrmConfigurations } from 'src/configs/orm.config';\nimport { User } from './entities/user.entity';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(typeOrmConfigurations),\n    TypeOrmModule.forFeature([User]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User) private userRepository: Repository,\n  ) {}\n\n  async getAllUser(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    if ((await this.userRepository.findOne(createUserDto.rut)) === undefined) {\n      let user = new User();\n      user = { ...createUserDto };\n\n      return await this.userRepository.save(user);\n    }\n\n    throw new Error();\n  }\n\n  async updateUser(createUserDto: CreateUserDto): Promise {\n    let user = new User();\n    user = { ...createUserDto };\n\n    return await this.userRepository.save(user);\n  }\n\n  async deleteUser(id: string): Promise {\n    return await this.userRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/configs/orm.config.ts\n            \n            variable\n            typeOrmConfigurations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.6.1\n        \n            @nestjs/typeorm : ^7.1.4\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            pg : ^8.4.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            typeorm : ^0.2.28\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            typeOrmConfigurations   (src/.../orm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configs/orm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfigurations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'postgres',\n  host: process.env.DB_HOST,\n  port: Number(process.env.DB_PORT),\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  entities: ['dist/**/*.entity{.ts,.js}'],\n  synchronize: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
