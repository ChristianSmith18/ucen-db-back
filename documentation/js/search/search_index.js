var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/CreateUserDto.html",[0,0.333,1,0.914]],["body/classes/CreateUserDto.html",[0,0.338,1,0.927,2,0.937,3,0.614,4,0.495,5,0.495,6,1.177,7,0.393,8,1.777,9,2.946,10,2.141,11,1.117,12,2.141,13,1.537,14,0.08,15,1.989,16,1.704,17,2.804,18,2.327,19,2.693,20,2.693,21,3.354,22,3.77,23,2.693,24,2.327,25,3.77,26,3.932,27,3.932,28,3.932,29,3.124,30,3.124,31,3.124,32,2.327,33,3.527,34,1.378,35,1.541,36,2.327,37,1.541,38,2.385,39,3.124,40,1.541,41,1.541,42,0.927,43,3.124,44,0.937,45,2.327,46,2.804,47,1.177,48,0.614,49,1.704,50,1.378,51,2.327,52,2.327,53,0.028,54,0.042,55,0.028]],["title/classes/User.html",[0,0.333,56,0.736]],["body/classes/User.html",[0,0.305,2,1.275,3,0.836,4,0.674,5,0.674,7,0.534,8,2.222,10,2.552,11,1.331,12,2.552,13,1.331,14,0.082,15,1.773,16,2.031,23,2.552,34,1.642,38,2.222,42,1.16,48,1.16,50,1.928,53,0.038,54,0.053,55,0.038,56,0.934,57,1.275,58,2.911,59,3.342,60,3.342,61,2.098,62,2.098,63,2.098,64,3.61,65,2.222,66,2.098,67,1.031,68,1.275,69,1.769,70,1.031,71,1.602,72,2.098,73,1.602,74,2.098,75,2.098,76,2.098,77,2.098,78,1.602,79,2.098,80,2.098,81,2.098,82,2.098,83,2.911,84,2.911,85,2.098,86,2.098,87,1.275]],["title/controllers/UserController.html",[88,1.127,89,1.127]],["body/controllers/UserController.html",[0,0.144,1,1.227,3,0.394,4,0.318,5,0.318,7,0.252,9,0.756,11,0.97,13,0.97,14,0.082,15,1.429,16,1.48,19,1.86,20,2.061,34,1.197,42,1.075,44,0.601,48,0.394,49,2.333,50,1.197,53,0.018,54,0.03,55,0.018,56,0.988,69,1.48,87,1.957,88,0.486,89,0.805,90,0.756,91,0.756,92,0.99,93,1.251,94,2.755,95,1.251,96,1.251,97,1.251,98,1.6,99,0.99,100,4.101,101,2.436,102,1.638,103,2.909,104,0.99,105,1.638,106,0.99,107,3.221,108,3.221,109,0.99,110,0.99,111,1.86,112,1.86,113,3.221,114,1.86,115,0.756,116,1.638,117,2.436,118,1.638,119,2.909,120,2.096,121,0.99,122,0.99,123,2.221,124,0.99,125,1.638,126,1.638,127,1.638,128,1.638,129,0.99,130,0.99,131,0.99,132,0.756,133,1.638,134,0.99,135,0.99,136,1.638,137,1.638,138,1.638,139,0.99,140,2.436,141,0.486,142,0.673,143,0.756,144,0.756,145,0.756,146,2.699,147,3.34,148,0.99,149,0.99,150,0.99,151,0.99,152,2.436,153,0.99,154,3.221,155,3.531,156,2.436,157,0.99,158,2.436,159,1.638,160,1.86,161,0.99,162,2.096,163,2.436,164,3.221,165,2.436,166,2.436,167,0.99,168,0.99,169,0.99,170,0.99,171,0.99,172,0.99,173,0.99,174,0.99]],["title/modules/UserModule.html",[175,1.394,176,1.127]],["body/modules/UserModule.html",[0,0.335,3,0.918,4,0.74,5,0.74,11,0.918,14,0.082,42,1.608,48,0.918,53,0.042,54,0.056,55,0.042,56,0.74,65,1.759,67,1.132,70,1.525,89,1.724,90,2.369,141,1.132,142,1.296,143,1.759,175,2.132,176,1.983,177,1.4,178,1.132,179,1.759,180,1.759,181,1.132,182,2.679,183,1.759,184,1.759,185,1.759,186,2.369,187,1.759,188,1.759,189,2.304,190,2.304,191,1.759,192,2.304,193,2.304,194,2.304,195,2.304,196,3.104,197,1.759,198,2.304,199,2.304,200,2.304,201,2.304]],["title/injectables/UserService.html",[142,0.736,202,1.127]],["body/injectables/UserService.html",[0,0.247,1,1.646,3,0.676,4,0.545,5,0.545,7,0.432,11,1.305,13,1.305,14,0.082,15,1.796,34,1.716,42,1.392,48,0.676,50,0.834,53,0.031,54,0.045,55,0.031,56,0.545,67,0.834,68,1.031,69,1.52,87,1.991,93,1.91,94,3.154,95,1.91,96,1.91,97,2.502,98,1.91,111,2.502,112,2.502,114,2.502,115,1.91,123,1.91,132,1.91,141,0.834,142,0.803,145,1.296,160,2.667,191,1.296,202,1.229,203,1.697,204,1.296,205,1.697,206,1.697,207,3.277,208,1.697,209,2.501,210,2.501,211,1.697,212,3.879,213,1.697,214,1.697,215,1.697,216,1.697,217,1.697,218,1.697,219,1.697,220,1.697,221,1.91,222,1.697,223,1.697,224,1.697,225,1.697,226,1.697,227,1.697,228,1.697,229,1.697]],["title/coverage.html",[230,1.88]],["body/coverage.html",[0,0.509,1,1.105,5,0.89,6,2.117,13,1.105,14,0.079,53,0.05,54,0.064,55,0.05,56,0.89,57,2.128,70,1.362,73,2.117,88,1.362,89,1.362,91,2.117,142,0.89,181,1.362,202,1.362,204,2.117,221,2.117,230,1.685,231,2.773,232,2.773,233,2.773,234,2.117,235,4.246,236,3.502,237,3.502,238,2.773,239,2.773,240,2.773,241,2.773,242,2.773]],["title/dependencies.html",[178,1.35,243,1.933]],["body/dependencies.html",[0,0.507,14,0.082,44,1.677,47,2.107,53,0.05,54,0.063,55,0.05,67,1.356,68,1.677,141,1.356,144,2.666,178,1.356,197,2.107,244,3.83,245,2.76,246,2.76,247,2.76,248,2.76,249,2.76,250,2.76,251,2.76,252,2.76,253,2.76,254,2.76,255,2.76,256,2.76,257,2.76,258,2.76,259,2.76,260,2.76,261,2.76,262,2.76,263,2.76]],["title/miscellaneous/functions.html",[264,0.95,265,2.098]],["body/miscellaneous/functions.html",[7,0.856,14,0.072,53,0.061,54,0.072,55,0.061,181,2.051,234,2.566,264,1.651,265,2.566,266,3.361]],["title/index.html",[7,0.492,267,1.933,268,1.933]],["body/index.html",[4,0.72,14,0.08,49,1.363,53,0.041,54,0.055,55,0.041,78,1.712,230,1.363,269,2.243,270,2.243,271,3.047,272,2.243,273,2.243,274,2.243,275,2.243,276,2.243,277,2.243,278,2.243,279,2.243,280,2.243,281,3.461,282,2.243,283,2.243,284,2.243,285,4.096,286,2.243,287,2.243,288,2.243,289,4.004,290,2.243,291,2.243,292,3.047,293,2.243,294,2.243,295,2.243,296,2.243,297,3.047,298,3.047,299,2.243,300,2.243,301,2.243,302,3.047,303,3.047,304,2.243,305,2.243,306,2.243,307,2.243,308,2.243,309,1.712,310,2.243,311,2.243,312,2.243,313,2.243,314,2.243,315,2.243,316,2.243,317,2.243,318,2.243,319,2.243,320,2.243,321,2.243,322,2.243,323,2.243,324,2.243,325,2.243,326,2.243,327,2.243]],["title/modules.html",[177,1.88]],["body/modules.html",[14,0.072,53,0.062,54,0.072,55,0.062,176,1.67,177,2.066,309,2.596,328,3.4,329,3.4,330,3.4]],["title/overview.html",[331,2.362]],["body/overview.html",[2,1.814,14,0.072,53,0.054,54,0.067,55,0.054,88,1.466,142,1.274,175,2.228,176,2.033,178,1.466,179,2.279,180,2.279,181,1.466,182,2.279,183,2.279,184,2.279,185,2.279,186,2.799,187,2.279,188,2.279,202,1.466,331,2.279,332,3.968,333,2.985]],["title/miscellaneous/variables.html",[264,0.95,334,2.098]],["body/miscellaneous/variables.html",[7,0.842,14,0.075,53,0.06,54,0.071,55,0.06,57,2.008,70,1.915,71,2.523,264,1.623,334,2.523,335,3.304,336,3.304,337,3.304]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":332,"title":{},"body":{"overview.html":{}}}],["2",{"_index":333,"title":{},"body":{"overview.html":{}}}],["200",{"_index":119,"title":{},"body":{"controllers/UserController.html":{}}}],["201",{"_index":105,"title":{},"body":{"controllers/UserController.html":{}}}],["3",{"_index":22,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3.0.2",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":107,"title":{},"body":{"controllers/UserController.html":{}}}],["5.10.6",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["__v",{"_index":82,"title":{},"body":{"classes/User.html":{}}}],["_id",{"_index":83,"title":{},"body":{"classes/User.html":{}}}],["actualiza",{"_index":133,"title":{},"body":{"controllers/UserController.html":{}}}],["al",{"_index":30,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":310,"title":{},"body":{"index.html":{}}}],["angular",{"_index":280,"title":{},"body":{"index.html":{}}}],["apellido",{"_index":18,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apioperation",{"_index":146,"title":{},"body":{"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":101,"title":{},"body":{"controllers/UserController.html":{}}}],["apiproperty",{"_index":43,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({description",{"_index":17,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiresponse",{"_index":147,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags",{"_index":148,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('usuario",{"_index":149,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":287,"title":{},"body":{"index.html":{}}}],["applications",{"_index":277,"title":{},"body":{"index.html":{}}}],["async",{"_index":94,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["author",{"_index":320,"title":{},"body":{"index.html":{}}}],["await",{"_index":160,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":311,"title":{},"body":{"index.html":{}}}],["bad",{"_index":108,"title":{},"body":{"controllers/UserController.html":{}}}],["body",{"_index":113,"title":{},"body":{"controllers/UserController.html":{}}}],["bootstrap",{"_index":181,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":330,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":328,"title":{},"body":{"modules.html":{}}}],["building",{"_index":272,"title":{},"body":{"index.html":{}}}],["campo",{"_index":27,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caracteres",{"_index":52,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caracteres.'})@isstring({message",{"_index":32,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["catch",{"_index":163,"title":{},"body":{"controllers/UserController.html":{}}}],["class",{"_index":0,"title":{"classes/CreateUserDto.html":{},"classes/User.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":184,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":185,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["config",{"_index":196,"title":{},"body":{"modules/UserModule.html":{}}}],["const",{"_index":69,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":205,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":217,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":151,"title":{},"body":{"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":206,"title":{},"body":{"injectables/UserService.html":{}}}],["contener",{"_index":29,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["controller",{"_index":88,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('user",{"_index":150,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":90,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["coverage",{"_index":230,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crea",{"_index":102,"title":{},"body":{"controllers/UserController.html":{}}}],["creados",{"_index":153,"title":{},"body":{"controllers/UserController.html":{}}}],["creados.'})@apiresponse({status",{"_index":129,"title":{},"body":{"controllers/UserController.html":{}}}],["created",{"_index":167,"title":{},"body":{"controllers/UserController.html":{}}}],["created.'})@apiresponse({status",{"_index":106,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser",{"_index":95,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createuser(@body",{"_index":168,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(body",{"_index":99,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":210,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":1,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["debe",{"_index":28,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["declarations",{"_index":180,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":34,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["del",{"_index":19,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":136,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":96,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deleteuser(@query('id",{"_index":173,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":115,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":178,"title":{"dependencies.html":{}},"body":{"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":49,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"index.html":{}}}],["development",{"_index":288,"title":{},"body":{"index.html":{}}}],["disable",{"_index":75,"title":{},"body":{"classes/User.html":{}}}],["document",{"_index":59,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":197,"title":{},"body":{"modules/UserModule.html":{},"dependencies.html":{}}}],["dto/user.dto",{"_index":145,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":299,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":273,"title":{},"body":{"index.html":{}}}],["el",{"_index":26,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["eliminar",{"_index":116,"title":{},"body":{"controllers/UserController.html":{}}}],["env",{"_index":194,"title":{},"body":{"modules/UserModule.html":{}}}],["error",{"_index":164,"title":{},"body":{"controllers/UserController.html":{}}}],["eslint",{"_index":74,"title":{},"body":{"classes/User.html":{}}}],["eslint/no",{"_index":79,"title":{},"body":{"classes/User.html":{}}}],["exec",{"_index":227,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":183,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":144,"title":{},"body":{"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":58,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":166,"title":{},"body":{"controllers/UserController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findbyidandupdate(id",{"_index":226,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":271,"title":{},"body":{"index.html":{}}}],["function",{"_index":73,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":265,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getalluser",{"_index":97,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getalluser(@res",{"_index":157,"title":{},"body":{"controllers/UserController.html":{}}}],["getalluser(response",{"_index":124,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":267,"title":{"index.html":{}},"body":{}}],["grow",{"_index":306,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":278,"title":{},"body":{"index.html":{}}}],["here",{"_index":317,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":324,"title":{},"body":{"index.html":{}}}],["id",{"_index":123,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id.'})@apiresponse({status",{"_index":118,"title":{},"body":{"controllers/UserController.html":{}}}],["identifier",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":42,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":198,"title":{},"body":{"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":202,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":203,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel",{"_index":216,"title":{},"body":{"injectables/UserService.html":{}}}],["inspired",{"_index":279,"title":{},"body":{"index.html":{}}}],["installation",{"_index":284,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":286,"title":{},"body":{"index.html":{}}}],["isnumber",{"_index":45,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":46,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":313,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":321,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":10,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["legend",{"_index":179,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":327,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":303,"title":{},"body":{"index.html":{}}}],["line",{"_index":77,"title":{},"body":{"classes/User.html":{}}}],["los",{"_index":127,"title":{},"body":{"controllers/UserController.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["menos",{"_index":31,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":25,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":93,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":21,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":51,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":264,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":302,"title":{},"body":{"index.html":{}}}],["mode",{"_index":292,"title":{},"body":{"index.html":{}}}],["model",{"_index":207,"title":{},"body":{"injectables/UserService.html":{}}}],["module",{"_index":175,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":177,"title":{"modules.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{}}}],["mongodb",{"_index":192,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoose",{"_index":68,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":193,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":200,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forroot(process.env.db_uri",{"_index":199,"title":{},"body":{"modules/UserModule.html":{}}}],["more",{"_index":316,"title":{},"body":{"index.html":{}}}],["muestra",{"_index":125,"title":{},"body":{"controllers/UserController.html":{}}}],["myśliwiec",{"_index":322,"title":{},"body":{"index.html":{}}}],["name",{"_index":11,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":281,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":326,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":141,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":67,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":44,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":221,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["newuser",{"_index":220,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.save",{"_index":223,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":76,"title":{},"body":{"classes/User.html":{}}}],["node.js",{"_index":270,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":36,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["npm",{"_index":285,"title":{},"body":{"index.html":{}}}],["number",{"_index":38,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["número",{"_index":39,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["object",{"_index":84,"title":{},"body":{"classes/User.html":{}}}],["object.id",{"_index":86,"title":{},"body":{"classes/User.html":{}}}],["ok",{"_index":155,"title":{},"body":{"controllers/UserController.html":{}}}],["ok.'})@apiresponse({status",{"_index":120,"title":{},"body":{"controllers/UserController.html":{}}}],["open",{"_index":304,"title":{},"body":{"index.html":{}}}],["optional",{"_index":112,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":188,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":331,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":243,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":111,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["phonenumber",{"_index":12,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["please",{"_index":314,"title":{},"body":{"index.html":{}}}],["post",{"_index":137,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":92,"title":{},"body":{"controllers/UserController.html":{}}}],["private",{"_index":218,"title":{},"body":{"injectables/UserService.html":{}}}],["production",{"_index":294,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":269,"title":{},"body":{"index.html":{}}}],["project",{"_index":305,"title":{},"body":{"index.html":{}}}],["promise",{"_index":212,"title":{},"body":{"injectables/UserService.html":{}}}],["prop",{"_index":64,"title":{},"body":{"classes/User.html":{}}}],["prop({required",{"_index":60,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["providers",{"_index":182,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":138,"title":{},"body":{"controllers/UserController.html":{}}}],["query",{"_index":139,"title":{},"body":{"controllers/UserController.html":{}}}],["query('id",{"_index":171,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":315,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":9,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["reflect",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":283,"title":{},"body":{"index.html":{}}}],["request",{"_index":156,"title":{},"body":{"controllers/UserController.html":{}}}],["request.'})@delete",{"_index":121,"title":{},"body":{"controllers/UserController.html":{}}}],["request.'})@get",{"_index":130,"title":{},"body":{"controllers/UserController.html":{}}}],["request.'})@post",{"_index":109,"title":{},"body":{"controllers/UserController.html":{}}}],["request.'})@put",{"_index":134,"title":{},"body":{"controllers/UserController.html":{}}}],["required",{"_index":23,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["res",{"_index":140,"title":{},"body":{"controllers/UserController.html":{}}}],["reset",{"_index":187,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":100,"title":{},"body":{"controllers/UserController.html":{}}}],["response.status(200).json",{"_index":162,"title":{},"body":{"controllers/UserController.html":{}}}],["response.status(201).json",{"_index":170,"title":{},"body":{"controllers/UserController.html":{}}}],["response.status(400).json",{"_index":165,"title":{},"body":{"controllers/UserController.html":{}}}],["result",{"_index":53,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":55,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":87,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":114,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":289,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":274,"title":{},"body":{"index.html":{}}}],["schema",{"_index":65,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":66,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":71,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":191,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["ser",{"_index":33,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["server",{"_index":275,"title":{},"body":{"index.html":{}}}],["side",{"_index":276,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":308,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/user.dto.ts",{"_index":6,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts:15",{"_index":37,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:27",{"_index":35,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/user.dto.ts:35",{"_index":41,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/schemas/user.schema.ts",{"_index":57,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/user.schema.ts:10",{"_index":61,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:13",{"_index":63,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:7",{"_index":62,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":91,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:25",{"_index":131,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":110,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:51",{"_index":135,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:68",{"_index":122,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":189,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":204,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":214,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:15",{"_index":211,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":215,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":213,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":208,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":290,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":293,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":295,"title":{},"body":{"index.html":{}}}],["started",{"_index":268,"title":{"index.html":{}},"body":{}}],["starter",{"_index":282,"title":{},"body":{"index.html":{}}}],["statements",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":154,"title":{},"body":{"controllers/UserController.html":{}}}],["stay",{"_index":318,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":152,"title":{},"body":{"controllers/UserController.html":{}}}],["support",{"_index":309,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":329,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":298,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":301,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":300,"title":{},"body":{"index.html":{}}}],["tests",{"_index":297,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":307,"title":{},"body":{"index.html":{}}}],["this.toobject",{"_index":85,"title":{},"body":{"classes/User.html":{}}}],["this.usermodel",{"_index":225,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel(createuserdto",{"_index":222,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find().exec",{"_index":219,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidanddelete(id).exec",{"_index":229,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(body",{"_index":169,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deleteuser(id",{"_index":174,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getalluser",{"_index":161,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuser(id",{"_index":172,"title":{},"body":{"controllers/UserController.html":{}}}],["todos",{"_index":126,"title":{},"body":{"controllers/UserController.html":{}}}],["touch",{"_index":319,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["través",{"_index":117,"title":{},"body":{"controllers/UserController.html":{}}}],["true",{"_index":50,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["true})@isnumber",{"_index":40,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@minlength(3",{"_index":24,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["try",{"_index":158,"title":{},"body":{"controllers/UserController.html":{}}}],["twitter",{"_index":325,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typescript",{"_index":78,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["ui",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":103,"title":{},"body":{"controllers/UserController.html":{}}}],["unit",{"_index":296,"title":{},"body":{"index.html":{}}}],["unused",{"_index":80,"title":{},"body":{"classes/User.html":{}}}],["updateduser",{"_index":224,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.save",{"_index":228,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":98,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuser(id",{"_index":132,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user",{"_index":56,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":190,"title":{},"body":{"modules/UserModule.html":{}}}],["user.name",{"_index":201,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":143,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usercontroller",{"_index":89,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":209,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":176,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":159,"title":{},"body":{"controllers/UserController.html":{}}}],["userschema",{"_index":70,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.method('tojson",{"_index":72,"title":{},"body":{"classes/User.html":{}}}],["userservice",{"_index":142,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":20,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["usuario.'})@apiresponse({status",{"_index":104,"title":{},"body":{"controllers/UserController.html":{}}}],["usuarios",{"_index":128,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":47,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":195,"title":{},"body":{"modules/UserModule.html":{}}}],["variable",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":334,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":81,"title":{},"body":{"classes/User.html":{}}}],["watch",{"_index":291,"title":{},"body":{"index.html":{}}}],["website",{"_index":323,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":312,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":186,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                lastname\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                phonenumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Apellido del usuario.', minLength: 3, type: String, required: true})@MinLength(3, {message: 'El campo  debe contener al menos 3 caracteres.'})@IsString({message: 'El campo  debe ser string.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Nombre del usuario.', minLength: 3, type: String, required: true})@MinLength(3, {message: 'El campo  debe contener al menos 3 caracteres.'})@IsString({message: 'El campo  debe ser string.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phonenumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Número del usuario.', type: Number, required: true})@IsNumber({}, {message: 'El campo  debe ser número.'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/user.dto.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'Nombre del usuario.',\n    minLength: 3,\n    type: String,\n    required: true,\n  })\n  @MinLength(3, {\n    message: 'El campo  debe contener al menos 3 caracteres.',\n  })\n  @IsString({ message: 'El campo  debe ser string.' })\n  readonly name: string;\n\n  @ApiProperty({\n    description: 'Apellido del usuario.',\n    minLength: 3,\n    type: String,\n    required: true,\n  })\n  @MinLength(3, {\n    message: 'El campo  debe contener al menos 3 caracteres.',\n  })\n  @IsString({ message: 'El campo  debe ser string.' })\n  readonly lastname: string;\n\n  @ApiProperty({\n    description: 'Número del usuario.',\n    type: Number,\n    required: true,\n  })\n  @IsNumber({}, { message: 'El campo  debe ser número.' })\n  readonly phonenumber: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/user.schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastname\n                            \n                            \n                                name\n                            \n                            \n                                phonenumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/user.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/user.schema.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phonenumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/schemas/user.schema.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class User extends Document {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  lastname: string;\n\n  @Prop({ required: true })\n  phonenumber: number;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.method('toJSON', function() {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { __v, _id, ...object } = this.toObject();\n  object.id = _id;\n  return object;\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(body: CreateUserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Crea un usuario.'})@ApiResponse({status: 201, description: 'CREATED.'})@ApiResponse({status: 400, description: 'BAD REQUEST.'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Eliminar un usuario a través del ID.'})@ApiResponse({status: 200, description: 'OK.'})@ApiResponse({status: 400, description: 'BAD REQUEST.'})@Delete()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUser(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Muestra todos los usuarios creados.'})@ApiResponse({status: 200, description: 'OK.'})@ApiResponse({status: 400, description: 'BAD REQUEST.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, body: CreateUserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Actualiza un usuario a través del ID.'})@ApiResponse({status: 200, description: 'OK.'})@ApiResponse({status: 400, description: 'BAD REQUEST.'})@Put()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  Query,\n  Res,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { Response } from 'express';\nimport { CreateUserDto } from './dto/user.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Usuario')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @ApiOperation({ summary: 'Muestra todos los usuarios creados.' })\n  @ApiResponse({ status: 200, description: 'OK.' })\n  @ApiResponse({ status: 400, description: 'BAD REQUEST.' })\n  @Get()\n  async getAllUser(@Res() response: Response) {\n    try {\n      const users = await this.userService.getAllUser();\n      return response.status(200).json({ ok: true, users });\n    } catch (error) {\n      return response.status(400).json({ ok: false, error });\n    }\n  }\n\n  @ApiOperation({ summary: 'Crea un usuario.' })\n  @ApiResponse({ status: 201, description: 'CREATED.' })\n  @ApiResponse({ status: 400, description: 'BAD REQUEST.' })\n  @Post()\n  async createUser(@Body() body: CreateUserDto, @Res() response: Response) {\n    try {\n      const user = await this.userService.createUser(body);\n      return response.status(201).json({ ok: true, user });\n    } catch (error) {\n      return response.status(400).json({ ok: false, error });\n    }\n  }\n\n  @ApiOperation({ summary: 'Actualiza un usuario a través del ID.' })\n  @ApiResponse({ status: 200, description: 'OK.' })\n  @ApiResponse({ status: 400, description: 'BAD REQUEST.' })\n  @Put()\n  async updateUser(\n    @Query('id') id: string,\n    @Body() body: CreateUserDto,\n    @Res() response: Response,\n  ) {\n    try {\n      const user = await this.userService.updateUser(id, body);\n      return response.status(200).json({ ok: true, user });\n    } catch (error) {\n      return response.status(400).json({ ok: false, error });\n    }\n  }\n\n  @ApiOperation({ summary: 'Eliminar un usuario a través del ID.' })\n  @ApiResponse({ status: 200, description: 'OK.' })\n  @ApiResponse({ status: 400, description: 'BAD REQUEST.' })\n  @Delete()\n  async deleteUser(@Query('id') id: string, @Res() response: Response) {\n    try {\n      const user = await this.userService.deleteUser(id);\n      return response.status(200).json({ ok: true, user });\n    } catch (error) {\n      return response.status(400).json({ ok: false, error });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { User, UserSchema } from './schemas/user.schema';\n\n// Mongodb\nimport { MongooseModule } from '@nestjs/mongoose';\n\n// Env var\nimport { config } from 'dotenv';\n\nconfig();\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(process.env.DB_URI),\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserDto } from './dto/user.dto';\nimport { User } from './schemas/user.schema';\n\n@Injectable()\nexport class UserService {\n  constructor(@InjectModel(User.name) private userModel: Model) {}\n\n  async getAllUser(): Promise {\n    return await this.userModel.find().exec();\n  }\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    const newUser = new this.userModel(createUserDto);\n    return await newUser.save();\n  }\n\n  async updateUser(id: string, createUserDto: CreateUserDto): Promise {\n    const updatedUser = await this.userModel\n      .findByIdAndUpdate(id, createUserDto, { new: true })\n      .exec();\n    return await updatedUser.save();\n  }\n\n  async deleteUser(id: string): Promise {\n    return await this.userModel.findByIdAndDelete(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.6.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            mongoose : ^5.10.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
